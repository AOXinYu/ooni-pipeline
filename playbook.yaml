---
- name: Stage instance(s)
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    keypair: ooni-pipeline
    instance_type: c3.8xlarge
    security_group: ooni-pipeline-computer-1
    image: ami-1ecae776
    region: us-east-1
  tasks:
    - name: Launch instance {{ instance_type }}
      ec2: 
        keypair: "{{ keypair }}"
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        count: 1
        region: "{{ region }}"
        volumes: 
          - device_name: /dev/sdc
            ephemeral: ephemeral0
      register: ec2

    - name: Add new instances to host group
      add_host: hostname={{item.public_ip}} groupname=computer
      with_items: ec2.instances

    - name: Wait for the instances to boot by checking the ssh port
      wait_for: host="{{item.public_dns_name}}" port=22 delay=60 timeout=320 state=started
      with_items: ec2.instances

#   Use the ec2_vol module to create volumes for attachment to each instance.
#   Use with_items to attach to each instance (by returned id) launched previously.

# 
#   - name: Create a volume and attach
#     ec2_vol: volume_size=20 instance={{item.id}}
#     with_items: ec2.instances
# 

- name: Configure instance
  hosts: computer
  user: ec2-user
  vars:
    virtualenv_name: pipeline
    user: ec2-user
    remote_syslog_version: "v0.13"
    pidfile: /var/run/oonipipeline.pid
    daemon: /bin/bash
    daemon_opts: "/home/ec2-user/ooni-pipeline-ng/private/run.sh"
    service_name: oonipipeline
    papertrail_hostname: "logs2.papertrailapp.com"
    papertrail_port: "57492"
    invoke_command: "add_headers_to_db 2012"
  tasks:
    - name: Mount ephemeral to tmp
      mount: name=/tmp src=/dev/sdc state=mounted fstype=ext3
      sudo: yes

    - name: Set permissions on /tmp
      file: path=/tmp mode=777
      sudo: yes

    - name: Update all packages
      yum: name=* state=latest
      sudo: yes

    - name: Install dev tools
      yum: name="@Development Tools" state=latest
      sudo: yes

    - name: Install dev libraries
      yum: name="@Development Libraries" state=latest
      sudo: yes

    - name: Install requirements with yum
      yum: name={{ item }} state=latest
      sudo: yes
      with_items:
        - git
        - screen
        - postgresql93-devel
        - libyaml-devel
        - htop

    - name: Install ooni-pipeline pip requirements
      pip: name="virtualenvwrapper" state=present
      sudo: yes

    - name: Configure virtualenvwrapper
      lineinfile: 
        dest: "{{ ansible_env.HOME }}/.bashrc"
        line: "{{ item }}"
      with_items:
        - "export WORKON_HOME=$HOME/virtualenvs"
        - "source /usr/local/bin/virtualenvwrapper.sh"

    - name: Create ~/virtualenvs/
      file: path="{{ ansible_env.HOME }}/virtualenvs" state=directory

    - name: Clone the ooni-pipline-ng repository to the home
      git: repo=https://github.com/thetorproject/ooni-pipeline-ng.git dest={{ ansible_env.HOME }}/ooni-pipeline-ng
    
    - name: Install ooni-pipeline pip requirements
      pip: requirements={{ ansible_env.HOME }}/ooni-pipeline-ng/requirements-computer.txt
           virtualenv={{ ansible_env.HOME }}/virtualenvs/{{ virtualenv_name }}
           virtualenv_site_packages=yes

    - name: Configure ooni-pipeline invoke
      copy: 
        src: "invoke.yaml"
        dest: "{{ ansible_env.HOME }}/ooni-pipeline-ng/invoke.yaml"

    - name: Download remote_syslog
      get_url:
        url: "https://github.com/papertrail/remote_syslog2/releases/download/{{remote_syslog_version}}/remote_syslog_linux_amd64.tar.gz"
        dest: /tmp/
      register: remote_syslog_archive

    - name: Unarchive remote_syslog
      unarchive:
        src: "/tmp/remote_syslog_linux_amd64.tar.gz"
        dest: "/tmp/"
        copy: no

    - name: Install remote_syslog
      command: "cp /tmp/remote_syslog/remote_syslog /usr/local/bin"
      sudo: yes 
      
    - name: Copy the private key
      copy: 
        src: "private/private.key"
        dest: "{{ ansible_env.HOME }}/ooni-pipeline-ng/private/private.key"
        mode: 0700

    - name: Write the run.sh script
      action: template src=templates/run.sh-template.j2 dest="{{ ansible_env.HOME }}/ooni-pipeline-ng/private/run.sh" mode=0754
 
    - name: Install the pipeline service
      action: template src=templates/init.d-template.j2 dest=/etc/init.d/oonipipeline mode=0754
      sudo: yes
    
    - name: Ensure the pipeline service is running
      action: service name=oonipipeline state=started
      sudo: yes

# - name: Terminate instances
#   hosts: localhost
#   connection: local
#   tasks:
#     - name: Terminate instances that were previously launched
#       ec2:
#         state: 'absent'
#         instance_ids: '{{ ec2.instance_ids }}'
